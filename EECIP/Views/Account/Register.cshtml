@model EECIP.Models.vmAccountRegister
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_LayoutLogin.cshtml";
}

@using (Html.BeginForm("Register", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "panel-body wrapper-lg", @id= "norepostform" }))
{
    @Html.AntiForgeryToken()

    if (ViewData.ModelState[""] != null && ViewData.ModelState[""].Errors.Count > 0)
    {
        <div class="alert alert-danger">
            <button type="button" class="close" data-dismiss="alert">×</button>
            <h4><i class="fa fa-info-circle"></i>Validation Error</h4>
            <br />
            @Html.ValidationSummary()
        </div>
    }

    <!-- render the validation summary -->
    @Html.Partial("~/Views/Shared/_ValidationSummary.cshtml")

    <div class="form-group">
        @Html.LabelFor(m => m.UserName, new { @class = "" })
        <i class=" m-l-xs fa fa-question-circle" data-toggle="tooltip" data-placement="top" data-original-title="Only one account allowed per email address."></i>
        @Html.TextBoxFor(m => m.UserName, new { @class = "form-control input-lg focus", @placeholder = "test@example.com", @type="email" })
        @Html.ValidationMessageFor(m => m.UserName)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmUserName, new { @class = "" })
        @Html.TextBoxFor(m => m.ConfirmUserName, new { @class = "form-control input-lg", @placeholder = "test@example.com" })
        @Html.ValidationMessageFor(m => m.ConfirmUserName)
    </div>
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label>First Name</label>
                @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control input-lg ", @placeholder = "" })
                @Html.ValidationMessageFor(m => m.FirstName)
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label>Last Name</label>
                @Html.TextBoxFor(model => model.LastName, new { @class = "form-control input-lg", @placeholder = "" })
                @Html.ValidationMessageFor(m => m.LastName)
            </div>
        </div>
    </div>

    if (Model.ddl_Agencies != null)
    {
    <div class="form-group">
            <label class="control-label">Which Agency</label>
            <i class=" m-l-xs fa fa-question-circle" data-toggle="tooltip" data-placement="top" data-original-title="If your agency is not listed, you can still register, however your account approval may be delayed as it is manually processed."></i>
   
            @Html.DropDownListFor(model => model.intSelOrgIDX, Model.ddl_Agencies, "-Please Select-", new { @class = "form-control input-lg m-b" })
            @Html.ValidationMessageFor(m => m.intSelOrgIDX)
    </div>
    }

    if (Model.suggestAgencyInd == true)
    {
    <div class="form-group">
        Your Agency Name
        @Html.TextBoxFor(m => m.suggestAgency, new { @class = "form-control input-lg", })
        @Html.ValidationMessageFor(m => m.suggestAgency)
    </div>
    }
    <button type="submit" class="btn btn-primary">Register</button>
    @Html.ActionLink("Already have an account?", "Login", new object { }, new { @class = "pull-right m-t-xs" })

}